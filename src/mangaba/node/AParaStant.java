/* This file was generated by SableCC (http://www.sablecc.org/). */

package mangaba.node;

import mangaba.analysis.*;

@SuppressWarnings("nls")
public final class AParaStant extends PParaStant
{
    private PAtribuicoes _atribuicoes_;
    private PParaStant2 _paraStant2_;

    public AParaStant()
    {
        // Constructor
    }

    public AParaStant(
        @SuppressWarnings("hiding") PAtribuicoes _atribuicoes_,
        @SuppressWarnings("hiding") PParaStant2 _paraStant2_)
    {
        // Constructor
        setAtribuicoes(_atribuicoes_);

        setParaStant2(_paraStant2_);

    }

    @Override
    public Object clone()
    {
        return new AParaStant(
            cloneNode(this._atribuicoes_),
            cloneNode(this._paraStant2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParaStant(this);
    }

    public PAtribuicoes getAtribuicoes()
    {
        return this._atribuicoes_;
    }

    public void setAtribuicoes(PAtribuicoes node)
    {
        if(this._atribuicoes_ != null)
        {
            this._atribuicoes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._atribuicoes_ = node;
    }

    public PParaStant2 getParaStant2()
    {
        return this._paraStant2_;
    }

    public void setParaStant2(PParaStant2 node)
    {
        if(this._paraStant2_ != null)
        {
            this._paraStant2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._paraStant2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._atribuicoes_)
            + toString(this._paraStant2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._atribuicoes_ == child)
        {
            this._atribuicoes_ = null;
            return;
        }

        if(this._paraStant2_ == child)
        {
            this._paraStant2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._atribuicoes_ == oldChild)
        {
            setAtribuicoes((PAtribuicoes) newChild);
            return;
        }

        if(this._paraStant2_ == oldChild)
        {
            setParaStant2((PParaStant2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
