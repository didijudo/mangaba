/* This file was generated by SableCC (http://www.sablecc.org/). */

package mangaba.node;

import java.util.*;
import mangaba.analysis.*;

@SuppressWarnings("nls")
public final class AInstanciaPrograma extends PInstanciaPrograma
{
    private final LinkedList<PDeclaracao> _blocoDeclaracao_ = new LinkedList<PDeclaracao>();
    private PBlocoFuncoes _blocoFuncoes_;

    public AInstanciaPrograma()
    {
        // Constructor
    }

    public AInstanciaPrograma(
        @SuppressWarnings("hiding") List<?> _blocoDeclaracao_,
        @SuppressWarnings("hiding") PBlocoFuncoes _blocoFuncoes_)
    {
        // Constructor
        setBlocoDeclaracao(_blocoDeclaracao_);

        setBlocoFuncoes(_blocoFuncoes_);

    }

    @Override
    public Object clone()
    {
        return new AInstanciaPrograma(
            cloneList(this._blocoDeclaracao_),
            cloneNode(this._blocoFuncoes_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAInstanciaPrograma(this);
    }

    public LinkedList<PDeclaracao> getBlocoDeclaracao()
    {
        return this._blocoDeclaracao_;
    }

    public void setBlocoDeclaracao(List<?> list)
    {
        for(PDeclaracao e : this._blocoDeclaracao_)
        {
            e.parent(null);
        }
        this._blocoDeclaracao_.clear();

        for(Object obj_e : list)
        {
            PDeclaracao e = (PDeclaracao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._blocoDeclaracao_.add(e);
        }
    }

    public PBlocoFuncoes getBlocoFuncoes()
    {
        return this._blocoFuncoes_;
    }

    public void setBlocoFuncoes(PBlocoFuncoes node)
    {
        if(this._blocoFuncoes_ != null)
        {
            this._blocoFuncoes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blocoFuncoes_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._blocoDeclaracao_)
            + toString(this._blocoFuncoes_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._blocoDeclaracao_.remove(child))
        {
            return;
        }

        if(this._blocoFuncoes_ == child)
        {
            this._blocoFuncoes_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PDeclaracao> i = this._blocoDeclaracao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDeclaracao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._blocoFuncoes_ == oldChild)
        {
            setBlocoFuncoes((PBlocoFuncoes) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
