/* This file was generated by SableCC (http://www.sablecc.org/). */

package mangaba.lexer;

import java.io.*;
import mangaba.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentario(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioLinha(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TApos(line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaractere(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleano(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFim(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNReal(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNInteiro(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNCaract(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNBooleano(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVerdadeiro(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalso(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVetor(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVazio(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TExibir(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRetorne(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEm(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPara(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParacada(line, pos); }
    Token new25(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOctal(text, line, pos); }
    Token new26(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THexaDecimal(text, line, pos); }
    Token new27(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDecimal(text, line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TE(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOu(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNega(line, pos); }
    Token new31(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentificador(text, line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMais(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMultiplica(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDivisor(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorq(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorq(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorIgual(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorIgual(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEsquerdoParenteses(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDireitoParenteses(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtribui(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoVirgula(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColcheteEsquerdo(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColcheteDireito(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChaveEsquerdo(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChaveDireito(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoisPontos(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAspas(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSeparator(line, pos); }
    Token new54(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirgula(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {34, 34, 5}, {35, 35, 6}, {37, 37, 7}, {39, 39, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {47, 47, 15}, {48, 48, 16}, {49, 57, 17}, {58, 58, 18}, {59, 59, 19}, {60, 60, 20}, {61, 61, 21}, {62, 62, 22}, {65, 90, 23}, {91, 91, 24}, {93, 93, 25}, {97, 97, 26}, {98, 98, 27}, {99, 99, 28}, {100, 100, 26}, {101, 101, 29}, {102, 102, 30}, {103, 104, 26}, {105, 105, 31}, {106, 109, 26}, {110, 110, 32}, {111, 111, 33}, {112, 112, 34}, {113, 113, 26}, {114, 114, 35}, {115, 115, 36}, {116, 117, 26}, {118, 118, 37}, {119, 122, 26}, {123, 123, 38}, {124, 124, 39}, {125, 125, 40}, {192, 192, 41}, {193, 193, 42}, {194, 194, 43}, {195, 195, 44}, {199, 199, 45}, {200, 200, 46}, {201, 201, 47}, {202, 202, 48}, {205, 205, 49}, {207, 207, 50}, {211, 211, 51}, {212, 212, 52}, {213, 213, 53}, {214, 214, 54}, {218, 218, 55}, {224, 224, 56}, {225, 225, 57}, {226, 226, 58}, {227, 227, 59}, {231, 231, 60}, {232, 232, 61}, {233, 233, 62}, {234, 234, 63}, {236, 236, 64}, {237, 237, 65}, {242, 242, 66}, {243, 243, 67}, {244, 244, 68}, {245, 245, 69}, {249, 249, 70}, {250, 250, 71}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {},
            {{9, 9, 72}, {10, 10, 73}, {13, 13, 74}, {32, 32, 75}, {36, 36, 76}, {65, 90, 77}, {92, 92, 78}, {95, 95, 79}, {97, 122, 80}, {192, 192, 81}, {193, 193, 82}, {194, 194, 83}, {195, 195, 84}, {199, 199, 85}, {200, 200, 86}, {201, 201, 87}, {202, 202, 88}, {205, 205, 89}, {207, 207, 90}, {211, 211, 91}, {212, 212, 92}, {213, 213, 93}, {214, 214, 94}, {218, 218, 95}, {224, 224, 96}, {225, 225, 97}, {226, 226, 98}, {227, 227, 99}, {231, 231, 100}, {232, 232, 101}, {233, 233, 102}, {234, 234, 103}, {236, 236, 104}, {237, 237, 105}, {242, 242, 106}, {243, 243, 107}, {244, 244, 108}, {245, 245, 109}, {249, 249, 110}, {250, 250, 111}, },
            {},
            {{65, 90, 112}, {97, 122, 113}, {192, 192, 114}, {193, 193, 115}, {194, 194, 116}, {195, 195, 117}, {199, 199, 118}, {200, 200, 119}, {201, 201, 120}, {202, 202, 121}, {205, 205, 122}, {207, 207, 123}, {211, 211, 124}, {212, 212, 125}, {213, 213, 126}, {214, 214, 127}, {218, 218, 128}, {224, 224, 129}, {225, 225, 130}, {226, 226, 131}, {227, 227, 132}, {231, 231, 133}, {232, 232, 134}, {233, 233, 135}, {234, 234, 136}, {236, 236, 137}, {237, 237, 138}, {242, 242, 139}, {243, 243, 140}, {244, 244, 141}, {245, 245, 142}, {249, 249, 143}, {250, 250, 144}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{44, 44, 145}, {48, 55, 146}, {56, 57, 17}, {88, 88, 147}, {120, 120, 148}, },
            {{44, 44, 145}, {48, 57, 17}, },
            {{61, 61, 149}, },
            {},
            {{61, 61, 150}, },
            {},
            {{61, 61, 151}, },
            {{48, 57, 152}, {65, 90, 153}, {97, 122, 154}, {192, 192, 155}, {193, 193, 156}, {194, 194, 157}, {195, 195, 158}, {199, 199, 159}, {200, 200, 160}, {201, 201, 161}, {202, 202, 162}, {205, 205, 163}, {207, 207, 164}, {211, 211, 165}, {212, 212, 166}, {213, 213, 167}, {214, 214, 168}, {218, 218, 169}, {224, 224, 170}, {225, 225, 171}, {226, 226, 172}, {227, 227, 173}, {231, 231, 174}, {232, 232, 175}, {233, 233, 176}, {234, 234, 177}, {236, 236, 178}, {237, 237, 179}, {242, 242, 180}, {243, 243, 181}, {244, 244, 182}, {245, 245, 183}, {249, 249, 184}, {250, 250, 185}, },
            {},
            {},
            {{48, 250, -25}, },
            {{48, 90, -25}, {97, 110, 154}, {111, 111, 186}, {112, 122, 154}, {192, 250, -25}, },
            {{48, 90, -25}, {97, 97, 187}, {98, 122, 154}, {192, 250, -25}, },
            {{48, 90, -25}, {97, 108, 154}, {109, 109, 188}, {110, 110, 189}, {111, 119, 154}, {120, 120, 190}, {121, 122, 154}, {192, 250, -25}, },
            {{48, 90, -25}, {97, 97, 191}, {98, 104, 154}, {105, 105, 192}, {106, 122, 154}, {192, 250, -25}, },
            {{48, 90, -25}, {97, 109, 154}, {110, 110, 193}, {111, 122, 154}, {192, 250, -25}, },
            {{48, 226, -25}, {227, 227, 194}, {231, 250, -25}, },
            {{48, 90, -25}, {97, 116, 154}, {117, 117, 195}, {118, 122, 154}, {192, 250, -25}, },
            {{48, 90, -25}, {97, 97, 196}, {98, 250, -30}, },
            {{48, 90, -25}, {97, 100, 154}, {101, 101, 197}, {102, 122, 154}, {192, 250, -25}, },
            {{48, 100, -37}, {101, 101, 198}, {102, 250, -37}, },
            {{48, 90, -25}, {97, 97, 199}, {98, 100, 154}, {101, 101, 200}, {102, 250, -37}, },
            {{0, 41, 201}, {42, 42, 202}, {43, 46, 201}, {47, 47, 203}, {48, 124, 201}, {125, 125, 204}, {126, 65535, 201}, },
            {},
            {},
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{9, 250, -8}, },
            {},
            {},
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{110, 110, 205}, {114, 114, 206}, {116, 116, 207}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{39, 39, 208}, },
            {{48, 57, 209}, },
            {{44, 57, -18}, },
            {{48, 57, 210}, {65, 70, 210}, },
            {{48, 70, -149}, },
            {},
            {},
            {},
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 110, -29}, {111, 111, 211}, {112, 250, -29}, },
            {{48, 90, -25}, {97, 113, 154}, {114, 114, 212}, {115, 122, 154}, {192, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 90, -25}, {97, 112, 154}, {113, 113, 213}, {114, 122, 154}, {192, 250, -25}, },
            {{48, 90, -25}, {97, 104, 154}, {105, 105, 214}, {106, 250, -32}, },
            {{48, 90, -25}, {97, 107, 154}, {108, 108, 215}, {109, 122, 154}, {192, 250, -25}, },
            {{48, 108, -31}, {109, 109, 216}, {110, 122, 154}, {192, 250, -25}, },
            {{48, 90, -25}, {97, 115, 154}, {116, 116, 217}, {117, 122, 154}, {192, 236, -25}, {237, 237, 218}, {242, 250, -25}, },
            {{48, 110, -29}, {111, 111, 219}, {112, 250, -29}, },
            {{48, 250, -25}, },
            {{48, 113, -189}, {114, 114, 220}, {115, 250, -189}, },
            {{48, 90, -25}, {97, 97, 221}, {98, 115, 154}, {116, 116, 222}, {117, 236, -195}, {237, 250, -25}, },
            {{48, 109, -33}, {110, 110, 223}, {111, 250, -33}, },
            {{48, 90, -25}, {97, 121, 154}, {122, 122, 224}, {192, 250, -25}, },
            {{48, 113, -189}, {114, 114, 225}, {115, 115, 154}, {116, 116, 226}, {117, 250, -199}, },
            {{0, 41, 227}, {43, 46, 227}, {47, 47, 228}, {48, 124, 227}, {125, 125, 229}, {126, 65535, 227}, },
            {{0, 46, 230}, {48, 65535, 230}, },
            {{47, 47, 228}, },
            {{0, 65535, -203}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {{9, 250, -8}, },
            {},
            {{48, 57, 209}, },
            {{48, 70, -149}, },
            {{48, 107, -193}, {108, 108, 231}, {109, 250, -193}, },
            {{48, 90, -25}, {97, 97, 232}, {98, 250, -30}, },
            {{48, 116, -35}, {117, 117, 233}, {118, 250, -35}, },
            {{48, 90, -25}, {97, 97, 154}, {98, 98, 234}, {99, 122, 154}, {192, 250, -25}, },
            {{48, 90, -25}, {97, 114, 154}, {115, 115, 235}, {116, 122, 154}, {192, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 100, -37}, {101, 101, 236}, {102, 250, -37}, },
            {{48, 90, -25}, {97, 98, 154}, {99, 99, 237}, {100, 122, 154}, {192, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 90, -25}, {97, 97, 238}, {98, 250, -30}, },
            {{48, 107, -193}, {108, 108, 239}, {109, 250, -193}, },
            {{48, 110, -29}, {111, 111, 240}, {112, 250, -29}, },
            {{48, 226, -25}, {227, 227, 241}, {231, 250, -25}, },
            {{48, 104, -192}, {105, 105, 242}, {106, 250, -32}, },
            {{48, 90, -25}, {97, 99, 154}, {100, 100, 243}, {101, 122, 154}, {192, 250, -25}, },
            {{48, 110, -29}, {111, 111, 244}, {112, 250, -29}, },
            {{0, 46, -203}, {48, 65535, -203}, },
            {{0, 41, 203}, {43, 124, 203}, {125, 125, 245}, {126, 65535, 203}, },
            {{0, 65535, -229}, },
            {{42, 42, 202}, {125, 125, 246}, },
            {{48, 100, -37}, {101, 101, 247}, {102, 250, -37}, },
            {{48, 98, -220}, {99, 99, 248}, {100, 250, -220}, },
            {{48, 90, -25}, {97, 97, 249}, {98, 250, -30}, },
            {{48, 104, -192}, {105, 105, 250}, {106, 250, -32}, },
            {{48, 110, -29}, {111, 111, 251}, {112, 250, -29}, },
            {{48, 104, -192}, {105, 105, 252}, {106, 250, -32}, },
            {{48, 104, -192}, {105, 105, 253}, {106, 250, -32}, },
            {{32, 32, 254}, {48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 113, -189}, {114, 114, 255}, {115, 250, -189}, },
            {{48, 110, -29}, {111, 111, 256}, {112, 250, -29}, },
            {{48, 110, -29}, {111, 111, 257}, {112, 250, -29}, },
            {{48, 90, -25}, {97, 97, 258}, {98, 250, -30}, },
            {{48, 113, -189}, {114, 114, 259}, {115, 250, -189}, },
            {{47, 47, 228}, },
            {},
            {{48, 90, -25}, {97, 97, 260}, {98, 250, -30}, },
            {{48, 115, -195}, {116, 116, 261}, {117, 250, -199}, },
            {{48, 109, -33}, {110, 110, 262}, {111, 250, -33}, },
            {{48, 113, -189}, {114, 114, 263}, {115, 250, -189}, },
            {{48, 250, -25}, },
            {{48, 113, -189}, {114, 114, 264}, {115, 250, -189}, },
            {{48, 110, -29}, {111, 111, 265}, {112, 250, -29}, },
            {{99, 99, 266}, },
            {{48, 109, -33}, {110, 110, 267}, {111, 250, -33}, },
            {{48, 250, -25}, },
            {{48, 250, -25}, },
            {{48, 99, -227}, {100, 100, 268}, {101, 250, -227}, },
            {{48, 250, -25}, },
            {{48, 109, -33}, {110, 110, 269}, {111, 250, -33}, },
            {{48, 100, -37}, {101, 101, 270}, {102, 250, -37}, },
            {{48, 115, -195}, {116, 116, 271}, {117, 250, -199}, },
            {{48, 250, -25}, },
            {{48, 110, -29}, {111, 111, 272}, {112, 250, -29}, },
            {{48, 250, -25}, },
            {{97, 97, 273}, },
            {{48, 100, -37}, {101, 101, 274}, {102, 250, -37}, },
            {{48, 100, -37}, {101, 101, 275}, {102, 250, -37}, },
            {{48, 110, -29}, {111, 111, 276}, {112, 250, -29}, },
            {{48, 113, -189}, {114, 114, 277}, {115, 250, -189}, },
            {{48, 110, -29}, {111, 111, 278}, {112, 250, -29}, },
            {{48, 250, -25}, },
            {{100, 100, 279}, },
            {{48, 250, -25}, },
            {{48, 104, -192}, {105, 105, 280}, {106, 250, -32}, },
            {{48, 250, -25}, },
            {{48, 100, -37}, {101, 101, 281}, {102, 250, -37}, },
            {{48, 250, -25}, },
            {{97, 97, 282}, },
            {{48, 113, -189}, {114, 114, 283}, {115, 250, -189}, },
            {{48, 250, -25}, },
            {},
            {{48, 110, -29}, {111, 111, 284}, {112, 250, -29}, },
            {{48, 250, -25}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 32, 32, 32, 32, 52, -1, 37, 2, 43, 44, 35, 33, 54, 34, 36, 3, 3, 51, 46, 38, 40, 39, 31, 47, 48, 31, 31, 31, 28, 31, 31, 31, 31, 31, 31, 31, 31, 49, 53, 50, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, 45, 41, 42, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 19, 31, 31, 31, 31, 31, 31, 29, 31, 31, 21, 31, 31, -1, -1, -1, 0, -1, -1, -1, 5, 4, 26, 31, 31, 31, 31, 31, 8, 31, 31, 30, 31, 31, 31, 31, 31, 31, 31, -1, -1, 0, -1, 31, 31, 31, 31, 31, 31, 31, 23, 9, 31, 31, 31, 31, 31, 0, 0, 31, 31, 31, 31, 6, 31, 31, -1, 31, 22, 16, 31, 15, 31, 31, 31, 17, 31, 7, -1, 31, 31, 31, 31, 31, 10, -1, 18, 31, 12, 31, 20, -1, 31, 11, 24, 31, 6, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
