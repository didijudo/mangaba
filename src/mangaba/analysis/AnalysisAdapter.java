/* This file was generated by SableCC (http://www.sablecc.org/). */

package mangaba.analysis;

import java.util.*;
import mangaba.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStart(AStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstanciaPrograma(AInstanciaPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoComando(ABlocoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoPrograma(ABlocoPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelDeclaracao(AVariavelDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVetorDeclaracao(AVetorDeclaracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelVariavel(AVariavelVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVetorVariavel(AVetorVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelBlocoVariaveis(AVariavelBlocoVariaveis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariaveisBlocoVariaveis(AVariaveisBlocoVariaveis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelVariaveisFuncao(AVariavelVariaveisFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariaveisVariaveisFuncao(AVariaveisVariaveisFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelVariavelFuncao(AVariavelVariavelFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariaveisVariavelFuncao(AVariaveisVariavelFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealTipo(ARealTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInteiroTipo(AInteiroTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACaractereTipo(ACaractereTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanoTipo(ABooleanoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioTipoFuncao(AVazioTipoFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoTipoFuncao(ATipoTipoFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoAtribuicoes(AAtribuicaoAtribuicoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoAtribuicoes(AFuncaoAtribuicoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoFuncao(ADeclaracaoFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetorno(ARetorno node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoChamada(AFuncaoChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoBlocoFuncoes(AFuncaoBlocoFuncoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariasBlocoFuncoes(AVariasBlocoFuncoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeEstrutura(ASeEstrutura node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoEstrutura(ASenaoEstrutura node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoEstrutura(AEnquantoEstrutura node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaEstrutura(AParaEstrutura node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParacadaEstrutura(AParacadaEstrutura node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeStant(ASeStant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASenaoStant(ASenaoStant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoStant(AEnquantoStant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaStant(AParaStant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaStant2(AParaStant2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaStant3(AParaStant3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParacadaStant(AParacadaStant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParacadaStant2(AParacadaStant2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoComando(AFuncaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetorneComando(ARetorneComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoComando(AAtribuicaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeComando(ASeComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeSenaoComando(ASeSenaoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoComando(AEnquantoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaComando(AParaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParaCadaComando(AParaCadaComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimplesBlocoExpr(ASimplesBlocoExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoExprBlocoExpr(ABlocoExprBlocoExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaisExpr(AMaisExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenosExpr(AMenosExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVezesExpr(AVezesExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivididoExpr(ADivididoExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARestoExpr(ARestoExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorExpr(AValorExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelExpr(AVariavelExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenosExpressaoExpr(AMenosExpressaoExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuExprLogica(AOuExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEExprLogica(AEExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorigualExprLogica(AMaiorigualExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorigualExprLogica(AMenorigualExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaiorExprLogica(AMaiorExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenorExprLogica(AMenorExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMaisExprLogica(AMaisExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenosExprLogica(AMenosExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVezesExprLogica(AVezesExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivididoExprLogica(ADivididoExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARestoExprLogica(ARestoExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANaoExprLogica(ANaoExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorExprLogica(AValorExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariavelExprLogica(AVariavelExprLogica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorRealValor(AValorRealValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorInteiroValor(AValorInteiroValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorCaractereValor(AValorCaractereValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorBooleanoValor(AValorBooleanoValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentario(TComentario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioLinha(TComentarioLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTApos(TApos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteiro(TInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCaractere(TCaractere node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBooleano(TBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNReal(TNReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNInteiro(TNInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNCaract(TNCaract node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNBooleano(TNBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVerdadeiro(TVerdadeiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalso(TFalso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVetor(TVetor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExibir(TExibir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRetorne(TRetorne node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEm(TEm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPara(TPara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParacada(TParacada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOctal(TOctal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTHexaDecimal(THexaDecimal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDecimal(TDecimal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNega(TNega node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentificador(TIdentificador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMais(TMais node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMultiplica(TMultiplica node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDivisor(TDivisor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorq(TMenorq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorq(TMaiorq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorIgual(TMenorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorIgual(TMaiorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEsquerdoParenteses(TEsquerdoParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDireitoParenteses(TDireitoParenteses node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribui(TAtribui node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirgula(TPontoVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteEsquerdo(TColcheteEsquerdo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteDireito(TColcheteDireito node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChaveEsquerdo(TChaveEsquerdo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChaveDireito(TChaveDireito node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoisPontos(TDoisPontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAspas(TAspas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSeparator(TSeparator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
